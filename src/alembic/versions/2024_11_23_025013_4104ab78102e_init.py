"""init

Revision ID: 4104ab78102e
Revises: 
Create Date: 2024-11-23 02:50:13.444615

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from alembic_utils.pg_extension import PGExtension
from sqlalchemy import text as sql_text

# revision identifiers, used by Alembic.
revision: str = "4104ab78102e"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "boilerplate",
        sa.Column("id", sa.Integer(), sa.Identity(always=True), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    public_postgis = PGExtension(schema="public", signature="postgis")
    op.create_entity(public_postgis)

    public_postgis_raster = PGExtension(schema="public", signature="postgis_raster")
    op.create_entity(public_postgis_raster)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    public_postgis_raster = PGExtension(schema="public", signature="postgis_raster")
    op.drop_entity(public_postgis_raster)

    public_postgis = PGExtension(schema="public", signature="postgis")
    op.drop_entity(public_postgis)

    op.drop_table("boilerplate")
    # ### end Alembic commands ###
